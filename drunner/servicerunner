#!/bin/bash
                                                                                                                                                          
#  ad88888ba                                        88                          88888888ba                                                                  
# d8"     "8b                                       ""                          88      "8b                                                                 
# Y8,                                                                           88      ,8P                                                                 
# `Y8aaaaa,     ,adPPYba,  8b,dPPYba,  8b       d8  88   ,adPPYba,   ,adPPYba,  88aaaaaa8P'  88       88  8b,dPPYba,   8b,dPPYba,    ,adPPYba,  8b,dPPYba,  
#   `"""""8b,  a8P_____88  88P'   "Y8  `8b     d8'  88  a8"     ""  a8P_____88  88""""88'    88       88  88P'   `"8a  88P'   `"8a  a8P_____88  88P'   "Y8  
#         `8b  8PP"""""""  88           `8b   d8'   88  8b          8PP"""""""  88    `8b    88       88  88       88  88       88  8PP"""""""  88          
# Y8a     a8P  "8b,   ,aa  88            `8b,d8'    88  "8a,   ,aa  "8b,   ,aa  88     `8b   "8a,   ,a88  88       88  88       88  "8b,   ,aa  88          
#  "Y88888P"    `"Ybbd8"'  88              "8"      88   `"Ybbd8"'   `"Ybbd8"'  88      `8b   `"YbbdP'Y8  88       88  88       88   `"Ybbd8"'  88          



#------------------------------------------------------------------------------------
# Initialisation of globals.

# bail if we try and use an unset var
set -o nounset

# Determine the current directory. There's stuff in there we want.
MYDIR=$( dirname "$(readlink -f "$0")" )

# read shell includes autogenerated by dRunner for us (it makes them when we're installed).
source "$MYDIR/variables.sh"
source "$MYDIR/utils.sh"

#------------------------------------------------------------------------------------
# showhelp - give some info about the service. SERVICENAME and IMAGENAME are provided by variables.sh.

function showhelp {
cat <<EOF >&2
NAME
   ${SERVICENAME}
       
SYNOPSIS
   ${CODE_S}${SERVICENAME} help${CODE_E}
      This help.
   
   ${CODE_S}${SERVICENAME} configure USERNAME AWS_ACCESS_KEY AWS_SECRET_KEY${CODE_E}
      Configure dResource.
  
   ${CODE_S}${SERVICENAME} create RESOURCE_FILE${CODE_E}
      Creates resources specified in RESOURCE_FILE.
   
   ${CODE_S}${SERVICENAME} delete RESOURCE_FILE${CODE_E}
      Deletes resources specified in RESOURCE_FILE.
   
DESCRIPTION
   Helpers for creating AWS resources. Built from ${IMAGENAME}.
   
EOF
}

#------------------------------------------------------------------------------------
# Run a command in a temporary container. 

function dockerrun {
   local RVAL=0
   docker run "${COMMANDOPTS[@]}" --name="${SERVICENAME}-${COMMAND}" -h "${HOSTNAME}" "${DOCKEROPTS[@]}" "${IMAGENAME}" "$@"
   RVAL=$?
   docker rm "${SERVICENAME}-${COMMAND}" >/dev/null
   [ $RVAL -eq 0 ] || die "${SERVICENAME} ${COMMAND} failed."
}

function dockerrunwithvolumes {
   local RVAL=0
   docker run "${COMMANDOPTS[@]}" --name="${SERVICENAME}-${COMMAND}" -h "${HOSTNAME}" "${DOCKEROPTS[@]}" $1 "${IMAGENAME}" "$2"
   RVAL=$?
   docker rm "${SERVICENAME}-${COMMAND}" >/dev/null
   [ $RVAL -eq 0 ] || die "${SERVICENAME} ${COMMAND} failed."
}

#------------------------------------------------------------------------------------
# The main function. We can add any commands we'd like here!

function main {
   if [ "$#" -eq 0 ]; then 
      die "servicerunner must have the install argument."
   fi

   COMMAND="${1}"
   COMMANDOPTS=("-i")

   case "$COMMAND" in 
   
          #--- standard (required) commands
   
         install)
            ;;
            
         obliterate)
            ;;
                     
         uninstall)
            ;;
                     
         backupstart)
            BACKUPPATH="$2"
            ;;
         
         backupend)
            BACKUPPATH="$2"
            ;;
         
         restore)
            RESTOREPATH="$2"
            ;;
         
         help)
            showhelp
            ;;
         
         enter)
            shift
            COMMANDOPTS=("-it")
            dockerrun /bin/bash "$@"
            ;;
         
         updatestart)
            ;;

         updateend)
            ;;
         
         selftest)
            ;;
            
         #--- custom commands

         configure)
            shift
            [ "$#" -eq 3 ] || die "dresource configure USERNAME AWS_ACCESS_KEY AWS_SECRET_KEY"
            dockerrun configure $1 $2 $3
            ;;
            
         create)
            shift
            [ "$#" -eq 1 ] || die "dresource create RESOURCE_FILE"
            dockerrunwithvolumes "-v $1:/resources" "create"
           ;;
           
         delete)
            shift
            [ "$#" -eq 1 ] || die "dresource delete RESOURCE_FILE"
            dockerrunwithvolumes "-v $1:/resources" "delete"
           ;;
            
         #--- unrecognised commands

         *)
            showhelp
            die "Unrecognised command ${CODE_S}${COMMAND}${CODE_E}"            
            ;;
   esac
}

#------------------------------------------------------------------------------------

main "$@"
